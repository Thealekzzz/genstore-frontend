import React, { useState } from 'react';
import Popup from '../Popup/Popup';

import getPrettyDateTime from '../../utils/getPrettyDateTime';

import styles from "./EvaluationUserPopup.module.css";
import lockedIcon from "../../imgs/locked.svg";
import questionIcon from "../../imgs/question.svg";
import catImage from "./imgs/cat.png";
import dogImage from "./imgs/dog.png";

import InfoPopup from '../InfoPopup/InfoPopup';
import ExpandableContent from '../ExpandableContent/ExpandableContent';

const EvaluationUserPopup = (props) => {
  // –ü–æ–ø–∞–ø—ã
  const [isStatusPopupOpen, setIsStatusPopupOpen] = useState(false);
  const [isPaymentInfoPopupOpen, setIsPaymentInfoPopupOpen] = useState(false);
  const [isEvaluatedStatusPopupOpen, setIsEvaluatedStatusPopupOpen] = useState(false);

  // –°–µ–∫—Ü–∏–∏


  const statusInfoVariants = [
    "–≠—Ç–∞ –∑–∞—è–≤–∫–∞ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞. –û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –ø—Ä–æ–∏–∑–≤–µ–¥—É—Ç —Ä–∞—Å—á–µ—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º",
    "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —ç—Ç—É –∑–∞—è–≤–∫—É, –Ω–∏–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
    "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —ç—Ç—É –∑–∞—è–≤–∫—É, –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞",
  ];


  return (
    <Popup isOpen={props.isOpen} setIsOpen={props.setIsOpen} style={{ width: 800 }}>
      <h2 className={styles.title}>{props.evaluationData.evaluationName}</h2>

      <ul className={styles.content}>
        <li className={styles.section}>
          <h3 className={styles.sectionName}>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>

          <p className={styles.sectionItem}>
            <span className={styles.itemName}>–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞</span>
            <span className={styles.itemValue}>
              {props.evaluationData.filename}
            </span>

          </p>
          <p className={styles.sectionItem}>
            <span className={styles.itemName}>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</span>
            <span className={styles.itemValue}>
              {getPrettyDateTime(props.evaluationData.createdAt)}
            </span>

          </p>

          <p className={styles.sectionItem}>
            <span className={styles.itemName}>–ö–æ–º–º–µ–Ω–∞—Ç—Ä–∏–π</span>
            <span className={styles.itemValue}>
              {props.evaluationData.userComment || "–ù–µ —É–∫–∞–∑–∞–Ω"}
            </span>

          </p>

          <h3 className={styles.sectionName} style={{ marginTop: 20 }}>–°—Ç–∞—Ç—É—Å</h3>

          <div className={styles.statusList}>
            <p
              className={styles.statusItem}
              style={{
                backgroundColor: props.evaluationData.isPaid ? "seagreen" : "#f26025"
              }}
            >
              {props.evaluationData.isPaid ? "–ó–∞—è–≤–∫–∞ –æ–ø–ª–∞—á–µ–Ω–∞" : "–ó–∞—è–≤–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞"}
            </p>
            <p
              className={styles.statusItem}
              style={{
                backgroundColor: props.evaluationData.isEvaluated ? "seagreen" : "#f26025"
              }}
            >
              {props.evaluationData.isEvaluated ? "–†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω" : "–†–∞—Å—á–µ—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω"}

            </p>
            <img
              src={questionIcon}
              className={styles.questionIcon}
              alt=""
              onClick={() => setIsStatusPopupOpen(!isStatusPopupOpen)}
            />
            <InfoPopup
              isOpen={isStatusPopupOpen}
              title="–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏"
              message={statusInfoVariants[props.evaluationData.isEvaluated + props.evaluationData.isPaid]}
              style={{ top: 190, left: 320 }}
            />

          </div>


        </li>

        <li>
          <ExpandableContent
            style={{
              width: "100%",
              backgroundColor: "#ECF2FA"
            }}
            isExpandable={!["created", "pending"].includes(props.evaluationData.status)}
            titleItem={(
              <>
                <h3 className={styles.sectionName}>
                  –û–ø–ª–∞—Ç–∞
                </h3>
                {["created", "pending"].includes(props.evaluationData.status) && (
                  <>
                    <img src={lockedIcon} alt="" />
                    <img
                      src={questionIcon}
                      className={styles.questionIcon}
                      alt=""
                      onClick={(evt) => {evt.stopPropagation(); setIsPaymentInfoPopupOpen(prev => !prev)}}
                    />

                    <InfoPopup
                      isOpen={isPaymentInfoPopupOpen}
                      title="–û–ø–ª–∞—Ç–∞"
                      message="–û–ø–ª–∞—Ç–∞ –∑–∞—è–≤–∫–∏ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –ø—Ä–æ–∏–∑–≤–µ–¥—É—Ç —Ä–∞—Å—á–µ—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º"
                      style={{ top: 256, left: 160 }}
                    />
                  </>
                )}
              </>
            )}
          >
            <div className={styles.ExtendableInner}>
              <div className={styles.ExtendableInnerWrapper}>
                <img src={catImage} width={200} alt="" />
                <p className={styles.ExtendableInnerText}>
                  –°–∫–æ—Ä–æ –º—ã –Ω–∞—Å—Ç—Ä–æ–∏–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π, –∞&nbsp;–ø–æ–∫–∞ —á—Ç–æ –∑–¥–µ—Å—å –∂–∏–≤–µ—Ç —ç—Ç–æ—Ç —à–∏–∫–∞—Ä–Ω—ã–π –∫–æ—Ç–∏–∫ üò∫
                </p>
              </div>
            </div>
          </ExpandableContent>
        </li>

        <li>
          <ExpandableContent
            style={{
              width: "100%",
              backgroundColor: "#ECF2FA"
            }}
            isExpandable={!["created", "pending", "awaiting payment"].includes(props.evaluationData.status)}
            titleItem={(
              <>
                <h3 className={styles.sectionName}>
                  –†–µ–∑—É–ª—å—Ç–∞—Ç
                </h3>
                {["created", "pending", "awaiting payment"].includes(props.evaluationData.status) && (
                  <>
                    <img src={lockedIcon} alt="" />
                    <img
                      src={questionIcon}
                      className={styles.questionIcon}
                      alt=""
                      onClick={(evt) => {evt.stopPropagation(); setIsEvaluatedStatusPopupOpen(prev => !prev)}}
                    />

                    <InfoPopup
                      isOpen={isEvaluatedStatusPopupOpen}
                      title="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞"
                      message="–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏"
                      style={{ top: 256, left: 160 }}
                    />
                  </>
                )}
              </>
            )}
          >
            <div className={styles.ExtendableInner}>
              <div className={styles.ExtendableInnerWrapper}>
                <img src={dogImage} width={200} alt="" />
                <p className={styles.ExtendableInnerText}>
                  –ê —Å—é–¥–∞ –º—ã –ø–æ–∫–∞ —á—Ç–æ –ø–æ—Å–µ–ª–∏–ª–∏ –ø—ë—Å–∏–∫–∞. –ù–æ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª —Ä–∞—Å—á–µ—Ç–∞
                </p>
              </div>
            </div>
          </ExpandableContent>
        </li>


      </ul>
    </Popup>
  );
};

export default EvaluationUserPopup;